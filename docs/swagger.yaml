basePath: /
definitions:
  models.Author:
    properties:
      firstname:
        type: string
      lastname:
        type: string
    type: object
  models.Book:
    properties:
      author:
        $ref: '#/definitions/models.Author'
      id:
        type: integer
      isbn:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: https://www.linkedin.com/in/ramazan-bolatkhan-a852321b8/
  description: This is a Pet project to learn Golang, used Postgresql
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Book Shelf API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Getting all the books stored in the "Shelf"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Get all Books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the database
      parameters:
      - description: Book Data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create book
          schema:
            type: string
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book in the database
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete book
          schema:
            type: string
      summary: Delete Book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Getting certain book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: book
      summary: Get Book by id
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update a book in the database
      parameters:
      - description: Book Data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update book
          schema:
            type: string
      summary: Update Book
      tags:
      - books
swagger: "2.0"
